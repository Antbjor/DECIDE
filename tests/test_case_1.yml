# The number of planar data points.
NUMPOINTS: 80

# Array containing the x coordinates of data points. (100*1)
POINTS_X: [7, 5, 2, 9, 3, 1, 0, 6, 8, 4, 
           9, 0, 5, 8, 7, 2, 4, 6, 3, 1, 
           2, 4, 6, 3, 1, 0, 9, 8, 5, 7, 
           4, 6, 0, 2, 1, 5, 9, 7, 3, 8, 
           8, 0, 1, 7, 6, 3, 4, 9, 2, 5, 
           6, 3, 1, 5, 7, 0, 4, 2, 8, 9, 
           5, 7, 8, 0, 2, 9, 1, 4, 6, 3, 
           1, 5, 7, 3, 8, 4, 9, 2, 6, 0]
# Array containing the y coordinates of data points. (100*1)
POINTS_Y: [3, 5, 9, 2, 1, 4, 7, 6, 0, 8, 
           2, 8, 0, 9, 6, 1, 5, 7, 4, 3, 
           9, 2, 5, 8, 7, 1, 6, 0, 4, 3, 
           4, 6, 7, 5, 0, 2, 3, 8, 9, 1, 
           5, 4, 2, 9, 6, 8, 1, 7, 0, 3, 
           7, 5, 6, 1, 9, 4, 3, 2, 8, 0, 
           2, 3, 5, 4, 9, 7, 8, 1, 6, 0, 
           8, 0, 3, 5, 7, 2, 9, 1, 4, 6]

# Struct holding parameters for LIC.
PARAMETERS:
  # Doubles in requirements
  LENGTH1: 4.0  # Length in LIC 0, 7, 12
  LENGTH2: 5.0  # Maximum length in LIC 12
  RADIUS1: 3.0  # Radius in LIC 1, 8, 13
  RADIUS2: 5.0  # Maximum length in LIC 13
  EPSILON: 2.0  # Deviation from PI in LIC 2, 9
  AREA1: 3.0    # Area in LIC 3, 10, 14
  AREA2: 3.0    # Maximum length in LIC 14
  DIST: 1.0     # Distance in LIC 6

  # Ints in requirements
  Q_PTS: 2  # Number of consecutive points in LIC 4
  QUADS: 1  # Number of quadrants in LIC 4
  N_PTS: 5  # Number of consecutive points in LIC 6
  K_PTS: 1  # Number of int points in LIC 7, 12
  A_PTS: 3  # Number of int points in LIC 8, 13
  B_PTS: 1  # Number of int points in LIC 8, 13
  C_PTS: 2  # Number of int points in LIC 9
  D_PTS: 2  # Number of int points in LIC 9
  E_PTS: 3  # Number of int points in LIC 10, 14
  F_PTS: 2  # Number of int points in LIC 10, 14
  G_PTS: 1  # Number of int points in LIC 11

# Logical Connector Matrix.
LCM:
  - [ "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ORR", "ORR"]
  - [ "ANDD", "ORR", "ANDD", "ORR", "ANDD", "ANDD", "ANDD", "NOTUSED", "ORR", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD"]
  - [ "NOTUSED", "ORR", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "NOTUSED", "ORR", "ANDD", "ANDD", "ANDD", "ANDD"]
  - [ "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ORR", "NOTUSED", "ANDD", "NOTUSED", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD"]
  - [ "NOTUSED", "ANDD", "ORR", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ORR", "ANDD", "ANDD", "NOTUSED", "ANDD"]
  - [ "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "NOTUSED"]
  - [ "ORR", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD"]
  - [ "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "ORR", "ANDD", "ANDD", "ANDD", "ORR", "ANDD"]
  - [ "NOTUSED", "NOTUSED", "ANDD", "NOTUSED", "NOTUSED", "ANDD", "ANDD", "ANDD", "ORR", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD"]
  - [ "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ORR", "ANDD", "ORR", "ANDD", "ANDD", "ANDD"]
  - [ "NOTUSED", "ORR", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD"]
  - [ "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "NOTUSED", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD"]
  - [ "NOTUSED", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ORR", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD"]
  - [ "ORR", "ANDD", "NOTUSED", "ORR", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ANDD", "ORR", "ANDD", "ANDD", "ANDD", "ANDD"]
  - [ "ANDD", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "NOTUSED", "ANDD", "NOTUSED", "ANDD", "ANDD", "ANDD", "ANDD"]

# Preliminary Unlocking Vector. (15*1)
PUV: [ "false", "true", "false", "false", "true", "false", "true", "true", "true", "true", "true", "true", "true", "true", "true" ]
